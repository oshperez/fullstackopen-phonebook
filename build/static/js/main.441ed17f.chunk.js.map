{"version":3,"sources":["services/persons.js","components/Filter.jsx","components/PersonForm.jsx","components/Button.jsx","components/Person.jsx","components/PersonList.jsx","components/Notification.jsx","App.js","services/notification.js","index.js"],"names":["baseUrl","services","getPersons","axios","get","then","res","data","addPerson","newObj","post","deletePerson","id","delete","updatePerson","put","Filter","filter","handleChange","value","onChange","PersonForm","name","number","handleSubmit","handleNameChange","handleNumberChange","onSubmit","required","type","Button","label","handleClick","onClick","console","log","Person","PersonList","persons","filterMatch","useMemo","RegExp","person","test","map","Notification","notification","className","active","content","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","useEffect","personServices","initialPersons","notify","category","info","newNotification","createMessage","setTimeout","e","target","preventDefault","newPerson","some","window","confirm","personId","find","updatedPerson","catch","returnedPerson","concat","error","response","status","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.441ed17f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getPersons = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst addPerson = (newObj) => {\r\n  const request = axios.post(baseUrl, newObj);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request;\r\n};\r\n\r\nconst updatePerson = (id, newObj) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObj);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst services = { getPersons, addPerson, deletePerson, updatePerson };\r\n\r\nexport default services;\r\n","const Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={filter} onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const PersonForm = ({\r\n  name,\r\n  number,\r\n  handleSubmit,\r\n  handleNameChange,\r\n  handleNumberChange,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        name: <input required value={name} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input required value={number} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","const Button = ({ label, id, handleClick }) => {\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        console.log(\"clicked\");\r\n        return handleClick(id);\r\n      }}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Person = ({ name, number, id, handleClick }) => {\r\n  return (\r\n    <li>\r\n      {name} {number}{\" \"}\r\n      <Button label=\"delete\" id={id} handleClick={handleClick} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import { useMemo } from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst PersonList = ({ persons, filter, handleClick }) => {\r\n  //regex for matching filter entries\r\n  const filterMatch = useMemo(() => new RegExp(`${filter}`, \"i\"), [filter]);\r\n  return (\r\n    <ul>\r\n      {persons\r\n        .filter((person) => filterMatch.test(person.name))\r\n        .map((person) => (\r\n          <Person\r\n            key={person.id}\r\n            name={person.name}\r\n            number={person.number}\r\n            id={person.id}\r\n            handleClick={handleClick}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PersonList;\r\n","const Notification = ({ notification }) => {\r\n  return (\r\n    <span\r\n      className={`notification ${\r\n        notification.type === \"error\"\r\n          ? \"error \"\r\n          : notification.type === \"success\"\r\n          ? \"success \"\r\n          : \"\"\r\n      }${notification.active ? \"show\" : \"hide\"}`}\r\n    >\r\n      {notification.content}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport personServices from \"./services/persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport PersonList from \"./components/PersonList\";\nimport Notification from \"./components/Notification\";\nimport createMessage from \"./services/notification\";\n\nconst App = () => {\n  //States\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  //Side effects\n  useEffect(() => {\n    personServices.getPersons().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  //Event handlers\n  const addPerson = (e) => {\n    e.preventDefault();\n    const newPerson = { name: newName, number: newNumber };\n    const isDuplicated = persons.some(\n      (person) => person.name === newPerson.name\n    );\n\n    if (isDuplicated) {\n      const updateConfirmed = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (updateConfirmed) {\n        const personId = persons.find(\n          (person) => person.name === newPerson.name\n        ).id;\n\n        personServices\n          .updatePerson(personId, newPerson)\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === updatedPerson.id ? updatedPerson : person\n              )\n            );\n            notify(\"person updated\", \"success\", updatedPerson.name);\n          })\n          .catch(() => notify(\"unexpected error\", \"error\", null));\n      }\n    } else {\n      personServices\n        .addPerson(newPerson)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          notify(\"person added\", \"success\", returnedPerson.name);\n        })\n        .catch((error) => {\n          notify(\"update error\", \"error\", error.response.data.error);\n        });\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deleteContact = (id) => {\n    console.log(\"delete person whose id is \", id);\n    const target = persons.find((person) => person.id === id);\n    const deleteConfirmed = window.confirm(`Delete ${target.name}?`);\n    if (deleteConfirmed) {\n      personServices\n        .deletePerson(id)\n        .then((res) => {\n          if (res.status === 204) {\n            notify(\"person deleted\", \"success\", target.name);\n          }\n        })\n        .catch((err) => {\n          notify(\"delete error\", \"error\", target.name);\n        });\n\n      setPersons(persons.filter((person) => person.id !== id));\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  //Helper function\n  const notify = (category, type, info) => {\n    const messgage = createMessage(category, info);\n    const newNotification = { content: messgage, type: type, active: true };\n    setNotification(newNotification);\n\n    setTimeout(() => {\n      setNotification({ ...newNotification, active: false });\n    }, 5 * 1000);\n  };\n\n  return (\n    <div>\n      <div className=\"header\">\n        <h2>Phonebook</h2>\n        {notification && <Notification notification={notification} />}\n      </div>\n\n      <Filter filter={filter} handleChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        handleSubmit={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <PersonList\n        persons={persons}\n        filter={filter}\n        handleClick={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export default function createMessage(type, info) {\r\n  const notifications = {\r\n    \"person added\": `Added ${info}`,\r\n    \"person deleted\": `Deleted ${info}`,\r\n    \"person updated\": `Updated ${info}`,\r\n    \"delete error\": `${info} has already been deleted from the server`,\r\n    \"update error\": info,\r\n    \"unexpected error\": \"Something went wrong\",\r\n  };\r\n\r\n  return notifications[type];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}