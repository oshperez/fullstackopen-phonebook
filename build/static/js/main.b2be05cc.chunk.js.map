{"version":3,"sources":["services/persons.js","components/Filter.jsx","components/PersonForm.jsx","components/Button.jsx","components/Person.jsx","components/PersonList.jsx","components/Notification.jsx","App.js","services/notification.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newObj","post","id","delete","put","Filter","filter","handleChange","value","onChange","PersonForm","name","number","handleSubmit","handleNameChange","handleNumberChange","onSubmit","required","type","Button","label","handleClick","onClick","Person","PersonList","persons","filterMatch","RegExp","phonebookList","useRef","useEffect","spanMatch","phonebookItems","current","childNodes","item","test","innerHTML","replace","match","ref","person","map","Notification","notification","className","active","content","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setNotification","personServices","initialPersons","notify","category","info","newNotification","createMessage","setTimeout","e","target","preventDefault","newPerson","some","window","confirm","personId","find","updatedPerson","catch","returnedPerson","concat","status","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2be05cc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getPersons = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst addPerson = (newObj) => {\r\n  const request = axios.post(baseUrl, newObj);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request;\r\n};\r\n\r\nconst updatePerson = (id, newObj) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObj);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nexport default { getPersons, addPerson, deletePerson, updatePerson };\r\n","const Filter = ({ filter, handleChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={filter} onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const PersonForm = ({\r\n  name,\r\n  number,\r\n  handleSubmit,\r\n  handleNameChange,\r\n  handleNumberChange,\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        name: <input required value={name} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input required value={number} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","const Button = ({ label, id, handleClick }) => {\r\n  return <button onClick={() => handleClick(id)}>{label}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Person = ({ name, number, id, handleClick }) => {\r\n  return (\r\n    <li>\r\n      {name} {number}{\" \"}\r\n      <Button label=\"delete\" id={id} handleClick={handleClick} />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import { useEffect, useRef } from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst PersonList = ({ persons, filter, handleClick }) => {\r\n  //regex for matching filter entries\r\n  const filterMatch = new RegExp(`${filter}`, \"i\");\r\n\r\n  //reference to ul DOM node\r\n  const phonebookList = useRef(null);\r\n\r\n  //Changes the font color of every match\r\n  useEffect(() => {\r\n    const spanMatch = /<span style=\"color: red\">||<\\/span>/g;\r\n    const phonebookItems = phonebookList.current.childNodes;\r\n\r\n    //Removes span tags from previous filter match\r\n    for (const item of phonebookItems) {\r\n      if (spanMatch.test(item.innerHTML)) {\r\n        item.innerHTML = item.innerHTML.replace(spanMatch, \"\");\r\n      }\r\n    }\r\n\r\n    if (filter) {\r\n      //Encloses the current match in a span tag to modify its font-color\r\n      for (const item of phonebookItems) {\r\n        item.innerHTML = item.innerHTML.replace(\r\n          filterMatch,\r\n          `<span style=\"color: red\">${item.innerHTML.match(filterMatch)}</span>`\r\n        );\r\n      }\r\n    }\r\n  }, [filter]);\r\n\r\n  return (\r\n    <ul ref={phonebookList}>\r\n      {persons\r\n        .filter((person) => filterMatch.test(person.name))\r\n        .map((person) => (\r\n          <Person\r\n            key={person.id}\r\n            name={person.name}\r\n            number={person.number}\r\n            id={person.id}\r\n            handleClick={handleClick}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PersonList;\r\n","const Notification = ({ notification }) => {\r\n  return (\r\n    <span\r\n      className={`notification ${\r\n        notification.type === \"err\"\r\n          ? \"error \"\r\n          : notification.type === \"success\"\r\n          ? \"success \"\r\n          : \"\"\r\n      }${notification.active ? \"show\" : \"hide\"}`}\r\n    >\r\n      {notification.content}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport personServices from \"./services/persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport PersonList from \"./components/PersonList\";\nimport Notification from \"./components/Notification\";\nimport createMessage from \"./services/notification\";\n\nconst App = () => {\n  //States\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  //Side effects\n  useEffect(() => {\n    personServices.getPersons().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  //Event handlers\n  const addPerson = (e) => {\n    e.preventDefault();\n    const newPerson = { name: newName, number: newNumber };\n    const isDuplicated = persons.some(\n      (person) => person.name === newPerson.name\n    );\n\n    if (isDuplicated) {\n      const updateConfirmed = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (updateConfirmed) {\n        const personId = persons.find(\n          (person) => person.name === newPerson.name\n        ).id;\n\n        personServices\n          .updatePerson(personId, newPerson)\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === updatedPerson.id ? updatedPerson : person\n              )\n            );\n            notify(\"person updated\", \"success\", updatedPerson.name);\n          })\n          .catch(() => notify(\"unexpected error\", \"err\", null));\n      }\n    } else {\n      personServices\n        .addPerson(newPerson)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          notify(\"person added\", \"success\", returnedPerson.name);\n        })\n        .catch(() => notify(\"unexpected error\", \"err\", null));\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deleteContact = (id) => {\n    const target = persons.find((person) => person.id === id);\n    const deleteConfirmed = window.confirm(`Delete ${target.name}?`);\n    if (deleteConfirmed) {\n      personServices\n        .deletePerson(id)\n        .then((res) => {\n          if (res.status === 204) {\n            notify(\"person deleted\", \"success\", target.name);\n          }\n        })\n        .catch((err) => {\n          notify(\"delete error\", \"err\", target.name);\n        });\n\n      setPersons(persons.filter((person) => person.id !== id));\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  //Helper function\n  const notify = (category, type, info) => {\n    const messgage = createMessage(category, info);\n    const newNotification = { content: messgage, type: type, active: true };\n    setNotification(newNotification);\n\n    setTimeout(() => {\n      setNotification({ ...newNotification, active: false });\n    }, 5 * 1000);\n  };\n\n  return (\n    <div>\n      <div className=\"header\">\n        <h2>Phonebook</h2>\n        {notification && <Notification notification={notification} />}\n      </div>\n\n      <Filter filter={filter} handleChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        handleSubmit={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <PersonList\n        persons={persons}\n        filter={filter}\n        handleClick={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export default function createMessage(type, person) {\r\n  const notifications = {\r\n    \"person added\": `Added ${person}`,\r\n    \"person deleted\": `Deleted ${person}`,\r\n    \"person updated\": `Updated ${person}`,\r\n    \"delete error\": `${person} has already been deleted from the server`,\r\n    \"unexpected error\": \"Something went wrong\"\r\n  };\r\n\r\n  return notifications[type];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}